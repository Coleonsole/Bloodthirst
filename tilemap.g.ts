// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`1e001e0007040404040404040404040404040404040404040404040404040404040504010101010101010101010101010101010101010101010101010101010404010101010901010101010101010101010101010101010101010101010404010101010101010101010301010101010201010101010101010101010404010101010101010101010101010101010901010101010101010101010404010101010101010101010101010101010b0101010101010101010101040401010102010101010101010101010101030101010101010101010101040401010101010101010a01010101010101010101010101010101010101040401010101010101010301010101010101010101010209030b020a010104040101010101010101010101010101010101010101010101010101010104040101010101010101010101010103010101010101010101010101010104040101010101010201010101090303010101010101010101010101010104040101030101010101010101010101010101010101010101010101010104040101010101010101010101010101010101010101010101010101010104040101010101010101010101010101010101010101010101010101010104040101010101010101010101010101010303020b02090201010101010104040101010101010901010101010101010a01010101010201010101010104040101010101010101010101010101010301010101010201010101010104040101010201010101010101010101010b0101010101090101010101010404010101090101010101030101010101020101010101030101010a01010404010101030101010101010101010101010101010101020101010101010404010101030101010101010101010101010101010101010101010101010404010101020101010101010101010101010101010101010101010101010404010101010101010101010101010101010101010101090301010101010404010101010101010101010101010102010101010101010101010101010404010101010101010101030b020902020101010101010101010101010104040101010101010101010101010101010101010101010101010101010104040101010101020101010101010101010101010101010101010101010104040101010101010101010101010101010101010101010101010101010104060404040404040404040404040404040404040404040404040404040408`, img`
222222222222222222222222222222
2............................2
2....2.......................2
2..........2.....2...........2
2................2...........2
2................2...........2
2...2............2...........2
2........2...................2
2........2...........222222..2
2............................2
2.............2..............2
2......2....222..............2
2..2.........................2
2............................2
2............................2
2...............2222222......2
2......2........2.....2......2
2...............2.....2......2
2...2...........2.....2......2
2...2.....2.....2.....2...2..2
2...2.................2......2
2...2........................2
2...2........................2
2.....................22.....2
2..............2.............2
2.........222222.............2
2............................2
2.....2......................2
2............................2
222222222222222222222222222222
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.floorDark2,sprites.dungeon.floorDark5,sprites.dungeon.purpleOuterNorth0,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.purpleOuterSouthEast,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.purpleOuterSouthWest,myTiles.tile1,myTiles.tile2,myTiles.tile3], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile1":
            case "tile3":return tile3;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
